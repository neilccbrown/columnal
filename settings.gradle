plugins {
    id "com.gradle.enterprise" version "3.8.1"
}

// For using --scan automatically:
gradleEnterprise {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}


rootProject.name = 'columnal'
include(':anns')
include(':anns-threadchecker')
include(':app')
include(':book')
include(':checkers')
include(':data')
include(':expressions')
include(':functions')
include(':utility-gui')
include(':identifiers')
include(':lex-editor')
include(':lex-editor-completion')
include(':parsers')
include(':r-interop')
include(':stf')
include(':tests')
include(':threadchecker')
include(':transformations')
include(':types')
include(':utility')
include(':utility-adt')
include(':utility-error')
include(':utility-functional')
include(':tests-basic')
include(':tests-functions')
include(':tests-gui-base')
include(':tests-gui-cell-rw')
include(':tests-gui-central')
include(':tests-gui-dtf')
include(':tests-gui-expression-editor')
include(':tests-gui-expression-editor-delete')
include(':tests-gui-expression-editor-further')
include(':tests-gui-expression-editor-position')
include(':tests-gui-format')
include(':tests-gui-grid')
include(':tests-gui-numbers')
include(':tests-gui-side')
include(':tests-gui-tables')
include(':tests-gui-transformations')
include(':tests-gui-transformations-create-edit')
include(':tests-gui-type-editor')
include(':tests-r')
include(':tests-tables')
include(':xml')

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            library('checkerframework', 'org.checkerframework:checker:3.26.0')
            library('checkerframework-qual', 'org.checkerframework:checker-qual:3.26.0')
            
            library('guava', 'com.google.guava:guava:31.1-jre')
            library('antlr.exec', 'org.antlr:antlr4:4.11.1')
            library('antlr', 'org.antlr:antlr4-runtime:4.11.1')
            library('commons.lang3', 'org.apache.commons:commons-lang3:3.12.0')
            library('commons.io', 'commons-io:commons-io:2.11.0')
            library('commons.text', 'org.apache.commons:commons-text:1.10.0')
            library('javaSMT', 'org.sosy-lab:java-smt:3.14.3')
            library('xom', 'xom:xom:1.3.8')
            library('stringsimilarity', 'info.debatty:java-string-similarity:2.0.0')
            library('log4j-api', 'org.apache.logging.log4j:log4j-api:2.19.0')
            library('log4j-core', 'org.apache.logging.log4j:log4j-core:2.19.0')
            library('controlsfx', 'org.controlsfx:controlsfx:11.1.1')
            library('wellbehavedfx', 'org.fxmisc.wellbehaved:wellbehavedfx:0.3.3')
            library('thumbnailator', 'net.coobird:thumbnailator:0.4.17')
            library('jna', 'net.java.dev.jna:jna:5.12.1')
            library('jna-platform', 'net.java.dev.jna:jna-platform:5.12.1')
            library('poi-ooxml', 'org.apache.poi:poi-ooxml:5.2.3')
            library('streamex', 'one.util:streamex:0.8.1')
            library('jsoup', 'org.jsoup:jsoup:1.15.3')
            library('packr', 'com.badlogicgames.packr:packr:3.0.3')
            library('bigmath', 'ch.obermuhlner:big-math:2.3.0')

            library('hamcrest','org.hamcrest:hamcrest-library:2.2')
            library('junit-quickcheck-core', 'com.pholser:junit-quickcheck-core:1.0')
            library('junit-quickcheck-generators', 'com.pholser:junit-quickcheck-generators:1.0')
            library('junit', 'junit:junit:4.13.2')
            bundle('junitWithQuickcheck', ['junit', 'junit-quickcheck-core', 'junit-quickcheck-generators'])
            library('testfx-core', 'org.testfx:testfx-core:4.0.16-alpha')
            library('testfx-junit', 'org.testfx:testfx-junit:4.0.15-alpha')
        }
    }
}
